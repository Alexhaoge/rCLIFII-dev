% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcle.R
\name{LIR.CI}
\alias{LIR.CI}
\title{Confidence interval for LIR MCLE}
\usage{
LIR.CI(
  theta,
  model,
  data,
  tp,
  ...,
  model_args = list(),
  mtau = -1,
  B = 500,
  cl = NULL,
  ncores = -1,
  alpha = 0.05
)
}
\arguments{
\item{theta}{initial value of estimate for MCLE iteration}

\item{model}{Model to calculate \eqn{\hat{R_{\tau}}}. Only function or "A"/"B"/"C"
are allowed. "A"/"B"/"C" is recommended for LIR model A/B/C, in this case
a faster built-in function (instead of LIR.model.A/B/C) is used to caculate
CL. Otherwise, a user-define model should function be given.}

\item{data}{Observation matrix}

\item{tp}{List-like observation time(1d vector)}

\item{...}{Additional parameters passed to the optimizer of MCLE}

\item{model_args}{Additional parameters passed to model}

\item{mtau}{The maximum allowable lag time. If a lagged pair has time \eqn{\tau}
greater than `mtau`, it will not be used to calculate composite likelihood.
If `mtau` is less than zero, all pairs will be used. Default -1.0.}

\item{B}{Bootstrap's repeat sampling times}

\item{cl}{Cluster to use, Default NULL. If NULL, a new cluster will be created by @seealso [makeCluster()]}

\item{ncores}{Number of processors to use. Default -1(which means all available cores).
This argument will be suppressed if cl is not NULL.}

\item{alpha}{Confidence level. Default 0.05.}
}
\value{
If length(theta) equals 1, return a 2 element vector representing the CI.
  Otherwise return a matrix. The first row of the matrix is the lower bound
  and the second row is the upper bound.
}
\description{
Estimate of LIR using MCLE is asymptotically normal so here bootstrap is applied to estimate the variance.
}
\examples{
# Example of confidence interval of MCLE
# Set observation time
tp <- c(1:5, 51:55, 101:105, 501:505, 601:605)
# Generate observation matrix with model C
data <- LIR.simulate.C(300, 100, 40, tp, 0.08, 0.04)
# CI
LIR.CI(c(0.001, 0.001, 0.001), LIR.model.C, data, tp, B = 10)
#              [,1]       [,2]        [,3]
# lower 0.005654683 0.08993638 0.003217763
# upper 0.008583934 0.33458409 0.003946556

}
