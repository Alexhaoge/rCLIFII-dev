% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_selection.R
\name{LIR.modelSelect}
\alias{LIR.modelSelect}
\title{Model Selection for lagged identification rate model.}
\usage{
LIR.modelSelect(
  data,
  t,
  theta_list = list(rep(0.1, 1), rep(0.001, 2), rep(0.001, 3)),
  model_list = list("A", "B", "C"),
  grad_list = list("A", "B", "C"),
  hessian_list = list("A", "B", "C"),
  criterion = "CLICa",
  ...,
  MCLE = FALSE,
  T = NULL,
  B = 500,
  cl = NULL,
  ncore = -1,
  verbose = TRUE
)
}
\arguments{
\item{data}{Observation matrix}

\item{t}{List-like observation time(1d vector)}

\item{theta_list}{List of Parameter to calculate \eqn{\hat{R_{\tau}}}
correspond to `model_list`. If param `MCLE` is TRUE,
this is the MCLE, otherwise the initial value for optimizer. Theta is required
because it is the only parameter that tells the dimension of estimating variable.}

\item{model_list}{List of candidate models, default list('A', 'B', 'C').
Only `as.list(function)` or 'A'/'B'/'C' is accepted.'A', 'B', 'C' are
package's built-in models and will be replaced by `LIR.model.A`,
`LIR.model.B`, `LIR.model.B`, respectively.}

\item{grad_list}{List of gradients correspond to candidate models.
Only function or 'A'/'B'/'C' is accepted.'A', 'B', 'C' are package's built-in
models and will be replaced by `LIR.grad.A`, `LIR.grad.B`, `LIR.grad.B`, respectively.
Only required for CLICa/CLICb.}

\item{hessian_list}{List of Hessian correspond to candidate models. Default list('A', 'B', 'C').
Only function or 'A'/'B'/'C' is accepted.'A', 'B', 'C' will be replaced by
`LIR.hessian.A`, `LIR.hessian.B`, `LIR.hessian.B`, respectively. Only required for CLICa/CLICb.}

\item{criterion}{Model selection criterion. Should be one of 'AIC', 'BIC',
'QAIC', 'CLICa' and 'CLICb'. Default list('A', 'B', 'C').}

\item{...}{Additional parameters passed to model, or upper/lower bound and optimize
argument when calculating MCLE.}

\item{MCLE}{If TRUE param `theta` is the MCLE, otherwise `theta` will be used as
the initial value for optimizer. Boolean, default FALSE.}

\item{B}{Bootstrap's repeat sampling times}

\item{cl}{Cluster to use, Default NULL. If NULL, a new cluster will be created by @seealso [makeCluster()]}

\item{ncore}{Number of processors to use. Default -1(which means all available cores).
This argument will be suppressed if cl is not NULL.}

\item{verbose}{Whether return verbose output. Default TRUE.}

\item{`T`}{Total study time. Required for CLICb and BIC.}
}
\value{
If `verbose` is FALSE return the score list of each model only. Otherwise
return a list.
\describe{
  \item{best}{Best model name}
  \item{best_model}{Best model function}
  \item{theta}{MCLE param to the best model}
  \item{score}{List of score to each model in `model_list`}
  \item{model_list}{Candidate model list}
  \item{criterion}{Criterion of model selection, characters}
}
}
\description{
List of model should be provided and a specific criterion among
AIC/BIC/QAIC/CLICa/CLICb should be assigned. This function will calculate
score of each model with the given criterion and select the model with highest
score as the best one.
}
\note{
User-defined functions in `model_list`, `grad_list`, `hessian_list` must be passed
as a list using as.list(function) and when iterate through model_list,
list format user-defined function will be convert to function by as.function(list)
}
\examples{
# Example of model selection
# Set observation time
t <- c(1:5, 51:55, 101:105, 501:505, 601:605)
# Generate observation matrix with model C
data <- move.simulate.C(300, 100, 605, 40, t, 0.08, 0.04)
# Model Selection
# Initial value of theta and boundary(when length(theta)==1) are very important
ms <- LIR.modelSelect(data, t, B=4, MCLE=FALSE, lower=0.0005, upper=0.09)
ms$score
# [1] 1.800000e+13 1.099621e+04 1.074243e+04
ms$best
# [1] "C"
ms$theta
# [1] 0.007119308 0.212260232 0.003582160

}
