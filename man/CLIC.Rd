% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_selection.R
\name{LIR.CLICa/b}
\alias{LIR.CLICa/b}
\alias{LIR.CLICa}
\alias{LIR.CLICb}
\title{Composite likelihood Information Criterion}
\usage{
LIR.CLICa(
  theta,
  model,
  grad,
  hessian,
  data,
  tp,
  ...,
  model_args = list(),
  mtau = -1,
  MCLE = FALSE,
  B = 500,
  cl = NULL,
  ncores = -1
)

LIR.CLICb(
  theta,
  model,
  grad,
  hessian,
  data,
  tp,
  ...,
  model_args = list(),
  mtau = -1,
  MCLE = FALSE,
  B = 500,
  cl = NULL,
  ncores = -1
)
}
\arguments{
\item{theta}{Parameter to calculate \eqn{\hat{R_{\tau}}}. If param `MCLE` is TRUE,
this is the MCLE, otherwise the initial value for optimizer. Theta is required
because it is the only parameter that tells the dimension of estimating variable.}

\item{model}{Model to calculate \eqn{\hat{R_{\tau}}}. Only function or "A"/"B"/"C"
are allowed. "A"/"B"/"C" is recommended for LIR model A/B/C, in this case
a faster built-in function (instead of LIR.model.A/B/C) is used to calculate
CL. Otherwise, a user-define model should function be given and it should
be a function that takes theta, tau_i (and other arguments in model_args
if necessary) and return a numeric number.}

\item{grad}{Gradient of the model. Should be a function that takes theta,
tau_i(and other arguments if necessary) and return a 1D
vector with same length as theta}

\item{hessian}{Hessian of the model. Should be a function that takes theta,
tau_i(and other arguments if necessary) and return a square symmetric matrix
with length(theta) rows and columns}

\item{data}{Observation matrix}

\item{tp}{List-like observation time(1d vector)}

\item{...}{Additional optimizer parameters passed for MCLE.}

\item{model_args}{Additional parameters passed to model}

\item{mtau}{The maximum allowable lag time. If a lagged pair has time \eqn{\tau}
greater than `mtau`, it will not be used to calculate composite likelihood.
If `mtau` is less than zero, all pairs will be used. Default -1.0.}

\item{MCLE}{If TRUE then `theta` is the MCLE, otherwise `theta` will be used as
the initial value for optimizer. Boolean, default FALSE.}

\item{B}{Bootstrap's repeat sampling times}

\item{cl}{Cluster to use, Default NULL. If NULL, a new cluster will be
created by @seealso [makeCluster()] and closed after function finished.
If not NULL, the function will use the given cluster and will not close it.}

\item{ncores}{Number of processors to use. Default -1(which means all available cores).
This argument will be suppressed if cl is not NULL.}
}
\value{
CLIC score
}
\description{
`LIR.CLICa` is CLICa criterion and `LIR.CLICb` is CLICb criterion.
\deqn{CLIC_a(\hat{\theta}_{LIR})=-2\sum_{t_i \in \tau_0}\sum_{\tau \in M}\{cl_{ij}(\hat{\theta}_{LIR})\}+2tr\{J_T(\theta_{LIR})H_T(\theta_{LIR})^{-1}\}}
\deqn{CLIC_b(\hat{\theta}_{LIR})=-2\sum_{t_i \in \tau_0}\sum_{\tau \in M}\{cl_{ij}(\hat{\theta}_{LIR})\}+ln(T)tr\{J_T(\theta_{LIR})H_T(\theta_{LIR})^{-1}\}}
\eqn{tr\{J_T(\theta_{LIR})H_T(\theta_{LIR})^{-1}\}} is difficult to calculate
thus replaced by \eqn{tr\{H_T(\theta_{LIR})var(\hat{\theta}_{LIR})\}}, which is more
robust. Bootstrap of individual is applied to estimate covariance matrix. Re-sample
procedure is paralleled.
}
